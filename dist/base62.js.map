{"version":3,"file":"base62.js","sources":["../index.ts"],"sourcesContent":["const basicTable =\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * create index map\n *\n * @param table base62 string table\n */\nfunction createIndexMap(table: string = basicTable): { [key: string]: number } {\n  return table\n    .split('')\n    .reduce(function(result: { [key: string]: number }, value, index) {\n      result[value] = index;\n      return result;\n    }, {});\n}\n\nconst basicIndexMap = createIndexMap();\n\n/**\n * decode to decimal number from base62 string\n *\n * @param str base62 string\n * @param [baseTable=basicTable] base62 table\n * @throws {TypeError} str is not a string\n * @throws {Error} str is unexpected format\n * @throws {Error} baseTable is not 62 in length\n */\nexport function decode(str: string, baseTable = basicTable): number {\n  if (typeof str !== 'string') {\n    throw new TypeError(`str must be a string: ${str}`);\n  }\n\n  if (!/^-?[\\dA-Za-z]+$/.test(str)) {\n    throw new Error(`unexpected format: ${str}`);\n  }\n\n  if (baseTable.length !== 62) {\n    throw new Error('baseTable must be 62 in length');\n  }\n\n  const indexMap =\n    baseTable === basicTable ? basicIndexMap : createIndexMap(baseTable);\n\n  const isNegative = str[0] === '-';\n\n  const numbers = (isNegative ? str.slice(1) : str).split('');\n  const numbersLength = numbers.length;\n\n  const result = numbers.reduce(function(result, n, index) {\n    return result + indexMap[n] * Math.pow(62, numbersLength - index - 1);\n  }, 0);\n\n  return isNegative ? -result : result;\n}\n\n/**\n * encode to base62 string from number\n *\n * @param num integer\n * @param [baseTable=basicTable] base62 table\n * @throws {TypeError} num is not an Integer\n * @throws {Error} baseTable is not 62 in length\n */\nexport function encode(num: number, baseTable = basicTable): string {\n  if (!Number.isSafeInteger(num)) {\n    throw new TypeError(`num is must be an integer: ${num}`);\n  }\n\n  if (baseTable.length !== 62) {\n    throw new Error('baseTable must be 62 in length');\n  }\n\n  if (num === 0) {\n    return '0';\n  }\n\n  const result = [];\n\n  let n = Math.abs(num);\n\n  while (n > 0) {\n    result.unshift(baseTable[n % 62]);\n    n = Math.floor(n / 62);\n  }\n\n  return num < 0 ? `-${result.join('')}` : result.join('');\n}\n"],"names":[],"mappings":";;;;;;;;;;;EAAA,MAAM,UAAU,GACd,gEAAgE,CAAC;EAEnE;;;;;EAKA,SAAS,cAAc,CAAC,QAAgB,UAAU;MAChD,OAAO,KAAK;WACT,KAAK,CAAC,EAAE,CAAC;WACT,MAAM,CAAC,UAAS,MAAiC,EAAE,KAAK,EAAE,KAAK;UAC9D,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;UACtB,OAAO,MAAM,CAAC;OACf,EAAE,EAAE,CAAC,CAAC;EACX,CAAC;EAED,MAAM,aAAa,GAAG,cAAc,EAAE,CAAC;EAEvC;;;;;;;;;AASA,WAAgB,MAAM,CAAC,GAAW,EAAE,SAAS,GAAG,UAAU;MACxD,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;UAC3B,MAAM,IAAI,SAAS,CAAC,yBAAyB,GAAG,EAAE,CAAC,CAAC;OACrD;MAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;UAChC,MAAM,IAAI,KAAK,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC;OAC9C;MAED,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;UAC3B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;OACnD;MAED,MAAM,QAAQ,GACZ,SAAS,KAAK,UAAU,GAAG,aAAa,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;MAEvE,MAAM,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;MAElC,MAAM,OAAO,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;MAC5D,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;MAErC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,UAAS,MAAM,EAAE,CAAC,EAAE,KAAK;UACrD,OAAO,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;OACvE,EAAE,CAAC,CAAC,CAAC;MAEN,OAAO,UAAU,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;EACvC,CAAC;EAED;;;;;;;;AAQA,WAAgB,MAAM,CAAC,GAAW,EAAE,SAAS,GAAG,UAAU;MACxD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;UAC9B,MAAM,IAAI,SAAS,CAAC,8BAA8B,GAAG,EAAE,CAAC,CAAC;OAC1D;MAED,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;UAC3B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;OACnD;MAED,IAAI,GAAG,KAAK,CAAC,EAAE;UACb,OAAO,GAAG,CAAC;OACZ;MAED,MAAM,MAAM,GAAG,EAAE,CAAC;MAElB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAEtB,OAAO,CAAC,GAAG,CAAC,EAAE;UACZ,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UAClC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;OACxB;MAED,OAAO,GAAG,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC3D,CAAC;;;;;;;;;;;;;"}