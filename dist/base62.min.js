/*!
 * @license base62.js Copyright(c) 2012 sasa+1
 * https://github.com/sasaplus1/base62.js
 * Released under the MIT license.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).base62={})}(this,function(e){"use strict";const t="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function n(e=t){return e.split("").reduce(function(e,t,n){return e[t]=n,e},{})}const r=n();e.decode=function(e,o=t){if("string"!=typeof e)throw new TypeError(`str must be a string: ${e}`);if(!/^-?[\dA-Za-z]+$/.test(e))throw new Error(`unexpected format: ${e}`);if(62!==o.length)throw new Error("baseTable must be 62 in length");const i=o===t?r:n(o),s="-"===e[0],f=(s?e.slice(1):e).split(""),u=f.length,c=f.reduce(function(e,t,n){return e+i[t]*Math.pow(62,u-n-1)},0);return s?-c:c},e.encode=function(e,n=t){if(!Number.isSafeInteger(e))throw new TypeError(`num is must be an integer: ${e}`);if(62!==n.length)throw new Error("baseTable must be 62 in length");if(0===e)return"0";const r=[];let o=Math.abs(e);for(;o>0;)r.unshift(n[o%62]),o=Math.floor(o/62);return e<0?`-${r.join("")}`:r.join("")},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=base62.min.js.map
