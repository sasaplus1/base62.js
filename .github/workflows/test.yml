name: test

on:
  - push
  - pull_request

jobs:
  mocha:
    name: mocha
    strategy:
      matrix:
        node:
          - 12
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint
      - run: yarn run test
      - run: yarn run check-types
      - run: yarn run build
  karma-windows:
    name: karma on Windows
    strategy:
      matrix:
        node:
          - 12
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn add -D karma-edge-launcher karma-ie-launcher
      # NOTE: karma-edge-launcher cannot execute Edge
      # see: https://github.com/sasaplus1/holidays-jp.js/runs/200661928
      # - run: yarn karma start --single-run --browsers Edge,IE
      - run: yarn karma start --single-run --browsers IE
  # NOTE: karma-safari-launcher can execute Safari, but not capture
  # see: https://github.com/sasaplus1/holidays-jp.js/runs/200661925
  # karma-macos:
  #   name: karma on macOS
  #   runs-on: macOS-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #       with:
  #         fetch-depth: 1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 10
  #     - run: npm install -g yarn
  #     - run: yarn install --frozen-lockfile
  #     - run: yarn add -D karma-safari-launcher
  #     - run: yarn karma start --single-run --browsers Safari
  karma-ios:
    name: karma on iOS
    strategy:
      matrix:
        node:
          - 12
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: xcrun simctl list
      - run: xcrun simctl list -j
      - run: |
          xcrun simctl list -j | jq '.devices[][] | select(.isAvailable == true) | { (.name): .udid }' | jq -s add
      - run: |
          xcrun simctl list -j | jq '.devices[][] | select(.isAvailable == true) | { (.name): .udid }' | jq -s add | jq -r '.["iPhone 11"]' | tee udid
      - run: xcrun simctl boot $(cat udid)
      - run: (sleep 3 && xcrun simctl openurl $(cat udid) http://127.0.0.1:9876) &
      - run: yarn karma start --single-run --no-browsers
  karma-ubuntu:
    name: karma on Ubuntu
    strategy:
      matrix:
        node:
          - 12
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn add -D karma-chrome-launcher karma-firefox-launcher
      - run: yarn karma start --single-run --browsers ChromeHeadlessNoSandbox,FirefoxHeadless
